name: meteorflow

services:
  postgres:
    image: postgres:15.6-alpine3.19
    ports:
      - "5432:5432"
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 100M
        limits:
          cpus: '1'
          memory: 200M
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - meteorflow-network

  auth-db:
    image: postgres:15.6-alpine3.19
    expose:
      - 5432
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 100M
        limits:
          cpus: '1'
          memory: 200M
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_NAME}
    volumes:
      - auth-db-volume:/var/lib/postgresql/data
    networks:
      - meteorflow-network

  form-builder-db:
    image: postgres:15.6-alpine3.19
    expose:
      - 5432
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 100M
        limits:
          cpus: '1'
          memory: 200M
    environment:
      POSTGRES_USER: ${FORM_BUILDER_DB_USER}
      POSTGRES_PASSWORD: ${FORM_BUILDER_DB_PASSWORD}
      POSTGRES_DB: ${FORM_BUILDER_DB_NAME}
    volumes:
      - form-builder-db-volume:/var/lib/postgresql/data
    networks:
      - meteorflow-network

  core-db:
    image: postgres:15.6-alpine3.19
    expose:
      - 5432
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 100M
        limits:
          cpus: '1'
          memory: 200M
    environment:
      POSTGRES_USER: ${CORE_DB_USER}
      POSTGRES_PASSWORD: ${CORE_DB_PASSWORD}
      POSTGRES_DB: ${CORE_DB_NAME}
    volumes:
      - core-db-volume:/var/lib/postgresql/data
    networks:
      - meteorflow-network

  redis:
    image: redis:7.2-alpine
    ports:
      - "6380:6380"
    networks:
      - meteorflow-network

  minio:
    image: quay.io/minio/minio:latest
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 200M
        limits:
          memory: 200M
    restart: unless-stopped
    volumes:
      - ./data:/data
    ports:
      - 2317:9000
      - 2318:9001
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_SERVER_URL=https://s3.meteor-flow.com
      - MINIO_BROWSER_REDIRECT_URL=https://explorer.meteor-flow.com
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 60s
      timeout: 5s
      retries: 5

volumes:
  mssql-volume:
  postgres-volume:
  auth-db-volume:
  form-builder-db-volume:
  core-db-volume:

networks:
  meteorflow-network:
    name: meteorflow-network
