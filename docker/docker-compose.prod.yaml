name: meteorflow

services:
  # web:
  #   build:
  #     context: ../src/MeteorFlow.Web
  #     dockerfile: Dockerfile.frontend
  #   ports:
  #     - ${WEB_PORT}:3000
  #   deploy:
  #     resources:
  #       reservations:
  #         cpus: "0.2"
  #         memory: 50M
  #       limits:
  #         cpus: "0.5"
  #         memory: 200M
  #   networks:
  #     - meteorflow-network

  core-api:
    # Always use the latest image
    image: ghcr.io/meteorflow/meteor-flow-backend:latest
    environment:
      - ConnectionStrings__DefaultConnection=${ConnectionStrings__DefaultConnection}
      - ConnectionStrings__PGConnection=${ConnectionStrings__PGConnection}
    ports:
      - ${API_PORT}:8080
    deploy:
      resources:
        reservations:
          cpus: "0.2"
          memory: 50M
        limits:
          cpus: "2"
          memory: 200M
    networks:
      - meteorflow-network

  auth-api:
    # Always use the latest image
    image: ghcr.io/meteorflow/meteor-flow-auth-api:latest
    environment:
      - ConnectionStrings__DefaultConnection=Host=auth-db; Port=8080; Database=${AUTH_DB_NAME}; Username=${AUTH_DB_USER}; Password=${AUTH_DB_PASSWORD}
    expose:
      - 8080
    deploy:
      resources:
        reservations:
          cpus: "0.2"
          memory: 50M
        limits:
          cpus: "2"
          memory: 200M
    networks:
      - meteorflow-network

  form-builder-api:
    # Always use the latest image
    image: ghcr.io/meteorflow/meteor-flow-form-builder-api:latest
    environment:
      - ConnectionStrings__DefaultConnection=Host=form-builder-db; Port=8080; Database=${FORM_BUILDER_DB_USER}; Username=${FORM_BUILDER_DB_PASSWORD}; Password=${FORM_BUILDER_DB_NAME}
    expose:
      - 8080
    deploy:
      resources:
        reservations:
          cpus: "0.2"
          memory: 50M
        limits:
          cpus: "2"
          memory: 200M
    networks:
      - meteorflow-network

networks:
  meteorflow-network:
    name: meteorflow-network
    external: true
